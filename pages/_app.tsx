import "../styles/globals.css";
import type { AppProps } from "next/app";
import Head from "next/head";
import AppBar from "@mui/material/AppBar";
import Box from "@mui/material/Box";
import Toolbar from "@mui/material/Toolbar";
import Typography from "@mui/material/Typography";
import Button from "@mui/material/Button";
import IconButton from "@mui/material/IconButton";
import MenuIcon from "@mui/icons-material/Menu";
import { createContext, useEffect, useState } from "react";
import { User } from "../utils/users";
import {
    CheckLocalStorage,
    GetCurrentUser,
    LoginContext,
    SaveLocalStorage,
    TokenManager,
    TokenPair,
} from "../utils/auth";
import Link from "next/link";
import { useRouter } from "next/router";
import { Menu, MenuItem } from "@mui/material";
import ArrowDropDownIcon from "@mui/icons-material/ArrowDropDown";

function MyApp({ Component, pageProps }: AppProps) {
    const [user, setUser] = useState<User | undefined>(undefined);
    const [tokenPair, setTokenPair] = useState<TokenPair | undefined>(
        undefined
    );

    

    const router = useRouter();

    useEffect(() => {
        const tokens = CheckLocalStorage();

        console.log(tokens);

        if (tokens) {





            GetCurrentUser(tokensManager, () => {
                //  router.push("/login");
            }).then((user) => {
                setUser(user);
            });
        }

        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);

    console.log(user);

    const [userMenuAnchor, setUserMenuAnchor] = useState<null | HTMLElement>(
        null
    );

    const handleUserMenu = (event: React.MouseEvent<HTMLElement>) => {
        setUserMenuAnchor(event.currentTarget);
    };
    const handleUserMenuClose = () => {
        setUserMenuAnchor(null);
    };
    return (
        <LoginContext.Provider
            value={{
                user,
                setUser: (newUser: User) => setUser(newUser),
                tokenManager: tokensManager,
            }}
        >
            <div>
                <Head>
                    <title>Create Next App</title>
                    <meta
                        name="description"
                        content="Generated by create next app"
                    />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <Box sx={{ flexGrow: 1 }}>
                    <AppBar position="sticky">
                        <Toolbar>
                            <IconButton
                                size="large"
                                edge="start"
                                color="inherit"
                                aria-label="menu"
                                sx={{ mr: 2 }}
                            >
                                <MenuIcon />
                            </IconButton>
                            <Typography
                                variant="h6"
                                component="div"
                                sx={{ flexGrow: 1 }}
                            >
                                <Link href={"/"}>Tournaments</Link>
                            </Typography>

                            {user ? (
                                <div>
                                    <Button
                                        aria-label="account of current user"
                                        aria-controls="menu-appbar"
                                        aria-haspopup="true"
                                        onClick={handleUserMenu}
                                        color="inherit"
                                        sx={{ textTransform: "none" }}
                                        endIcon={<ArrowDropDownIcon />}
                                    >
                                        {user.username}
                                    </Button>
                                    <Menu
                                        id="user-menu"
                                        anchorEl={userMenuAnchor}
                                        anchorOrigin={{
                                            vertical: "top",
                                            horizontal: "right",
                                        }}
                                        keepMounted
                                        transformOrigin={{
                                            vertical: "top",
                                            horizontal: "right",
                                        }}
                                        open={Boolean(userMenuAnchor)}
                                        onClose={handleUserMenuClose}
                                    >
                                        <MenuItem onClick={handleUserMenuClose}>
                                            Profile
                                        </MenuItem>
                                        <MenuItem onClick={handleUserMenuClose}>
                                            Logout
                                        </MenuItem>
                                    </Menu>
                                </div>
                            ) : (
                                <Link href="/login" passHref>
                                    <Button color="inherit">Login</Button>
                                </Link>
                            )}
                        </Toolbar>
                    </AppBar>
                </Box>
            </div>

            <Component {...pageProps} />
        </LoginContext.Provider>
    );
}

export default MyApp;
