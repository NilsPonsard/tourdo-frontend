import "../styles/globals.css";
import type { AppProps } from "next/app";
import Head from "next/head";
import AppBar from "@mui/material/AppBar";
import Box from "@mui/material/Box";
import Toolbar from "@mui/material/Toolbar";
import Typography from "@mui/material/Typography";
import Button from "@mui/material/Button";
import IconButton from "@mui/material/IconButton";
import MenuIcon from "@mui/icons-material/Menu";
import { createContext, useEffect, useState } from "react";
import { User } from "../utils/users";
import {
    CheckLocalStorage,
    GetCurrentUser,
    LoginContext,
    TokenManager,
    TokenPair,
} from "../utils/auth";
import Link from "next/link";

function MyApp({ Component, pageProps }: AppProps) {
    const [user, setUser] = useState<User | null>(null);
    const [tokenPair, setTokenPair] = useState<TokenPair>({
        accessToken: "",
        refreshToken: "",
        valid: false,
    });

    const tokensManager: TokenManager = {
        tokenPair,
        setTokens: (tokens: TokenPair) => {

            // TODO : update user
            
            setTokenPair(tokens);
        },
    };

    useEffect(() => {
        const tokens = CheckLocalStorage();

        if (tokens) {
            tokensManager.setTokens({
                accessToken: tokens.accessToken,
                refreshToken: tokens.refreshToken,
                valid: true,
            });

            GetCurrentUser(tokensManager).then((user) => {
                setUser(user);
            });
        }

        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);

    console.log(user);

    return (
        <LoginContext.Provider
            value={{
                user,
                setUser: (newUser: User) => setUser(newUser),
                tokensManager,
            }}
        >
            <div>
                <Head>
                    <title>Create Next App</title>
                    <meta
                        name="description"
                        content="Generated by create next app"
                    />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <Box sx={{ flexGrow: 1 }}>
                    <AppBar position="sticky">
                        <Toolbar>
                            <IconButton
                                size="large"
                                edge="start"
                                color="inherit"
                                aria-label="menu"
                                sx={{ mr: 2 }}
                            >
                                <MenuIcon />
                            </IconButton>
                            <Typography
                                variant="h6"
                                component="div"
                                sx={{ flexGrow: 1 }}
                            >
                                <Link href={"/"}>Tournaments</Link>
                            </Typography>
                            <Link href="/login" passHref>
                                <Button color="inherit">Login</Button>
                            </Link>
                        </Toolbar>
                    </AppBar>
                </Box>
            </div>

            <Component {...pageProps} />
        </LoginContext.Provider>
    );
}

export default MyApp;
